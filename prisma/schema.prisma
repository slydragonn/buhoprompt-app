// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
  // Enable Edge compatibility for Vercel Edge functions and Middleware
  // previewFeatures = ["fullTextSearchPostgres", "multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // Optional: Enable connection pooling
  // directUrl = env("DIRECT_DATABASE_URL")
}

model Prompt {
  id                 String    @id @default(cuid())
  title              String
  description        String    @db.Text
  initial            String    @db.Text
  improved           String
  userClerkId        String    
  templateId         String?
  isFavorite         Boolean   @default(false)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  
  @@unique([title, userClerkId], name: "title_userId")
  @@index([templateId])
  @@index([createdAt(sort: Desc)])
}

model Template {
  id            String    @id @default(cuid())
  title         String
  content       String
  description   String    @db.Text
  userClerkId   String    
  isOfficial    Boolean   @default(false)
  model         String    
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  @@unique([title, userClerkId], name: "title_userId")
  @@index([isOfficial, createdAt(sort: Desc)])
}

model UserToken {
  id            String      @id @default(cuid())
  userClerkId   String      @unique
  tokensUsed    Int         @default(0)
  tokensLimit   Int         @default(10)
  resetAt       DateTime    @default(now())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@index([userClerkId])
}